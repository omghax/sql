#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.8
# from Racc grammer file "".
#

require 'racc/parser.rb'

require File.dirname(__FILE__) + '/parser.rex.rb'

module SQL
  class Parser < Racc::Parser

module_eval(<<'...end parser.racc/module_eval...', 'parser.racc', 312)

def self.parse(sql)
  new.scan_str(sql)
end
...end parser.racc/module_eval...
##### State transition tables begin ###

racc_action_table = [
    41,    61,    81,    24,    81,    56,    11,   136,   143,   188,
   199,    75,    74,     6,   108,   147,   200,   137,    41,   139,
   140,    24,   141,   142,   221,   222,   148,    58,   149,    15,
    58,    58,   150,    58,    62,   159,    41,    44,    45,   193,
    29,    42,    33,    35,    36,    37,    38,    15,    46,   151,
    49,    44,    45,    59,    60,    44,    45,   145,    29,    42,
    33,    35,    36,    37,    38,    15,    46,    41,    49,   190,
   116,   191,   192,    44,    45,   154,    29,    42,    33,    35,
    36,    37,    38,   155,    46,   115,    49,    41,   123,   159,
   193,   112,   113,   110,   171,   120,    15,   174,   109,    89,
   177,   178,   179,   180,    44,    45,   181,    29,    42,    33,
    35,    36,    37,    38,    58,    46,    15,    49,    41,   104,
    15,   116,   187,    58,    44,    45,    96,    29,    42,    33,
    35,    36,    37,    38,    96,    46,    58,    49,    89,   123,
   195,    83,    76,    73,    72,    71,   120,    15,    41,  -134,
    70,   116,    69,     6,   146,    44,    45,    68,    29,    42,
    33,    35,    36,    37,    38,    67,    46,    89,    49,   123,
    41,    89,   159,    24,   210,     6,   120,    15,   174,    66,
   195,    65,   -72,   214,    55,    44,    45,   217,    29,    42,
    33,    35,    36,    37,    38,    54,    46,    41,    49,    15,
   116,    51,    15,   224,    50,   226,   227,    44,    45,     6,
    29,    42,    33,    35,    36,    37,    38,   136,    46,    41,
    49,   229,    24,     9,     6,   120,    15,   137,     7,   139,
   140,   159,   141,   142,    44,    45,    58,    29,    42,    33,
    35,    36,    37,    38,   235,    46,    41,    49,    15,    24,
   236,    58,    98,   nil,   nil,   nil,    44,    45,   nil,    29,
    42,    33,    35,    36,    37,    38,   136,    46,   nil,    49,
   nil,   nil,   nil,   nil,    41,    15,   137,   116,   139,   140,
   nil,   141,   142,    44,    45,   nil,    29,    42,    33,    35,
    36,    37,    38,   nil,    46,   123,    49,    41,   nil,   nil,
    24,   nil,   120,    15,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    44,    45,   nil,    29,    42,    33,    35,    36,    37,
    38,   nil,    46,   nil,    49,    41,    15,   nil,    24,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    29,    42,    33,
    35,    36,    37,    38,   nil,    46,   nil,    49,    41,   nil,
   nil,   193,   nil,   nil,    15,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    44,    45,   nil,    29,    42,    33,    35,    36,
    37,    38,   nil,    46,   nil,    49,    41,    15,   nil,   193,
   nil,   nil,   nil,   nil,   nil,    44,    45,   136,    29,    42,
    33,    35,    36,    37,    38,   nil,    46,   137,    49,   139,
   140,   nil,   141,   142,    41,    15,   nil,   116,   nil,   nil,
   nil,   nil,   nil,    44,    45,   nil,    29,    42,    33,    35,
    36,    37,    38,   nil,    46,   123,    49,   nil,   nil,   nil,
   nil,   nil,   120,    15,    41,   nil,   nil,   116,   nil,   nil,
   nil,    44,    45,   nil,    29,    42,    33,    35,    36,    37,
    38,   nil,    46,   nil,    49,   123,    41,   nil,   nil,    24,
   nil,   nil,   120,    15,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    44,    45,   nil,    29,    42,    33,    35,    36,    37,
    38,   nil,    46,    41,    49,    15,   193,   nil,   nil,   nil,
   nil,   nil,   nil,    44,    45,   nil,    29,    42,    33,    35,
    36,    37,    38,   nil,    46,    41,    49,   nil,   193,   nil,
   nil,   nil,    15,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    44,    45,   nil,    29,    42,    33,    35,    36,    37,    38,
   nil,    46,    41,    49,    15,   193,   nil,   nil,   nil,   nil,
   nil,   nil,    44,    45,   nil,    29,    42,    33,    35,    36,
    37,    38,   nil,    46,    41,    49,   nil,   193,   nil,   nil,
   nil,    15,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    44,
    45,   nil,    29,    42,    33,    35,    36,    37,    38,   nil,
    46,    41,    49,    15,   193,   nil,   nil,   nil,   nil,   nil,
   nil,    44,    45,   nil,    29,    42,    33,    35,    36,    37,
    38,   nil,    46,    41,    49,   nil,    24,   nil,   nil,   nil,
    15,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    44,    45,
   nil,    29,    42,    33,    35,    36,    37,    38,   nil,    46,
    41,    49,    15,    24,   nil,   nil,   nil,   nil,   nil,   nil,
    44,    45,   nil,    29,    42,    33,    35,    36,    37,    38,
   nil,    46,    41,    49,   nil,    24,   nil,   nil,   nil,    15,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    44,    45,   nil,
    29,    42,    33,    35,    36,    37,    38,   nil,    46,    41,
    49,    15,   193,   nil,   nil,   nil,   nil,   nil,   nil,    44,
    45,   nil,    29,    42,    33,    35,    36,    37,    38,   nil,
    46,    41,    49,   nil,   193,   nil,   nil,   nil,    15,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    44,    45,   nil,    29,
    42,    33,    35,    36,    37,    38,   nil,    46,    41,    49,
    15,    24,   nil,   nil,   nil,   nil,   nil,   nil,    44,    45,
   nil,    29,    42,    33,    35,    36,    37,    38,   nil,    46,
    41,    49,   nil,    24,   nil,   nil,   nil,    15,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    44,    45,   nil,    29,    42,
    33,    35,    36,    37,    38,   nil,    46,    41,    49,    15,
    24,   nil,   nil,   nil,   nil,   nil,   nil,    44,    45,   nil,
    29,    42,    33,    35,    36,    37,    38,   nil,    46,    41,
    49,   nil,    24,   nil,   nil,   nil,    15,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    44,    45,   nil,    29,    42,    33,
    35,    36,    37,    38,   nil,    46,    41,    49,    15,    24,
   nil,   nil,   nil,   nil,   nil,   nil,    44,    45,   nil,    29,
    42,    33,    35,    36,    37,    38,   nil,    46,    41,    49,
   nil,   193,   nil,   nil,   nil,    15,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    44,    45,   nil,    29,    42,    33,    35,
    36,    37,    38,   nil,    46,   nil,    49,    15,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    44,    45,   nil,    29,    42,
    33,    35,    36,    37,    38,   nil,    46,   nil,    49,   160,
   161,   nil,   162,   163,   164,   nil,   nil,   nil,   nil,   165,
   166,   167,   168,   169,   170 ]

racc_action_check = [
     6,    18,    51,     6,   110,    14,     6,   209,    85,   157,
   164,    46,    46,   171,    73,   100,   164,   209,   227,   209,
   209,   227,   209,   209,   209,   209,   101,    14,   102,     6,
    85,    51,   103,   110,    18,   157,   224,     6,     6,   224,
     6,     6,     6,     6,     6,     6,     6,   227,     6,   107,
     6,    73,    73,    17,    17,   227,   227,    98,   227,   227,
   227,   227,   227,   227,   227,   224,   227,   221,   227,   160,
   221,   160,   160,   224,   224,   114,   224,   224,   224,   224,
   224,   224,   224,   115,   224,    82,   224,   214,   221,   117,
   214,    79,    79,    77,   120,   221,   221,   121,    74,   136,
   137,   138,   140,   141,   221,   221,   142,   221,   221,   221,
   221,   221,   221,   221,   143,   221,   214,   221,    83,    71,
   155,    83,   156,    65,   214,   214,   158,   214,   214,   214,
   214,   214,   214,   214,    64,   214,    56,   214,    54,    83,
   162,    53,    49,    43,    42,    41,    83,    83,   116,    39,
    38,   116,    37,   116,    99,    83,    83,    36,    83,    83,
    83,    83,    83,    83,    83,    35,    83,   177,    83,   116,
   195,   178,   183,   195,   184,   195,   116,   116,   189,    33,
   191,    30,    15,   194,    13,   116,   116,   199,   116,   116,
   116,   116,   116,   116,   116,    10,   116,   123,   116,   195,
   123,     9,   210,   211,     7,   215,   216,   195,   195,     0,
   195,   195,   195,   195,   195,   195,   195,   176,   195,   193,
   195,   222,   193,     4,   193,   123,   123,   176,     1,   176,
   176,   228,   176,   176,   123,   123,   229,   123,   123,   123,
   123,   123,   123,   123,   232,   123,    66,   123,   193,    66,
   233,   236,    66,   nil,   nil,   nil,   193,   193,   nil,   193,
   193,   193,   193,   193,   193,   193,    84,   193,   nil,   193,
   nil,   nil,   nil,   nil,   159,    66,    84,   159,    84,    84,
   nil,    84,    84,    66,    66,   nil,    66,    66,    66,    66,
    66,    66,    66,   nil,    66,   159,    66,    19,   nil,   nil,
    19,   nil,   159,   159,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   159,   159,   nil,   159,   159,   159,   159,   159,   159,
   159,   nil,   159,   nil,   159,    24,    19,   nil,    24,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    19,    19,    19,
    19,    19,    19,    19,   nil,    19,   nil,    19,   192,   nil,
   nil,   192,   nil,   nil,    24,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    24,    24,   nil,    24,    24,    24,    24,    24,
    24,    24,   nil,    24,   nil,    24,   190,   192,   nil,   190,
   nil,   nil,   nil,   nil,   nil,   192,   192,   208,   192,   192,
   192,   192,   192,   192,   192,   nil,   192,   208,   192,   208,
   208,   nil,   208,   208,   154,   190,   nil,   154,   nil,   nil,
   nil,   nil,   nil,   190,   190,   nil,   190,   190,   190,   190,
   190,   190,   190,   nil,   190,   154,   190,   nil,   nil,   nil,
   nil,   nil,   154,   154,   174,   nil,   nil,   174,   nil,   nil,
   nil,   154,   154,   nil,   154,   154,   154,   154,   154,   154,
   154,   nil,   154,   nil,   154,   174,    62,   nil,   nil,    62,
   nil,   nil,   174,   174,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   174,   174,   nil,   174,   174,   174,   174,   174,   174,
   174,   nil,   174,   169,   174,    62,   169,   nil,   nil,   nil,
   nil,   nil,   nil,    62,    62,   nil,    62,    62,    62,    62,
    62,    62,    62,   nil,    62,   168,    62,   nil,   168,   nil,
   nil,   nil,   169,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   169,   169,   nil,   169,   169,   169,   169,   169,   169,   169,
   nil,   169,   167,   169,   168,   167,   nil,   nil,   nil,   nil,
   nil,   nil,   168,   168,   nil,   168,   168,   168,   168,   168,
   168,   168,   nil,   168,   166,   168,   nil,   166,   nil,   nil,
   nil,   167,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   167,
   167,   nil,   167,   167,   167,   167,   167,   167,   167,   nil,
   167,   165,   167,   166,   165,   nil,   nil,   nil,   nil,   nil,
   nil,   166,   166,   nil,   166,   166,   166,   166,   166,   166,
   166,   nil,   166,    70,   166,   nil,    70,   nil,   nil,   nil,
   165,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   165,   165,
   nil,   165,   165,   165,   165,   165,   165,   165,   nil,   165,
    69,   165,    70,    69,   nil,   nil,   nil,   nil,   nil,   nil,
    70,    70,   nil,    70,    70,    70,    70,    70,    70,    70,
   nil,    70,    68,    70,   nil,    68,   nil,   nil,   nil,    69,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    69,    69,   nil,
    69,    69,    69,    69,    69,    69,    69,   nil,    69,   163,
    69,    68,   163,   nil,   nil,   nil,   nil,   nil,   nil,    68,
    68,   nil,    68,    68,    68,    68,    68,    68,    68,   nil,
    68,   161,    68,   nil,   161,   nil,   nil,   nil,   163,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   163,   163,   nil,   163,
   163,   163,   163,   163,   163,   163,   nil,   163,    55,   163,
   161,    55,   nil,   nil,   nil,   nil,   nil,   nil,   161,   161,
   nil,   161,   161,   161,   161,   161,   161,   161,   nil,   161,
    67,   161,   nil,    67,   nil,   nil,   nil,    55,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    55,    55,   nil,    55,    55,
    55,    55,    55,    55,    55,   nil,    55,    59,    55,    67,
    59,   nil,   nil,   nil,   nil,   nil,   nil,    67,    67,   nil,
    67,    67,    67,    67,    67,    67,    67,   nil,    67,    60,
    67,   nil,    60,   nil,   nil,   nil,    59,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    59,    59,   nil,    59,    59,    59,
    59,    59,    59,    59,   nil,    59,    61,    59,    60,    61,
   nil,   nil,   nil,   nil,   nil,   nil,    60,    60,   nil,    60,
    60,    60,    60,    60,    60,    60,   nil,    60,   170,    60,
   nil,   170,   nil,   nil,   nil,    61,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    61,    61,   nil,    61,    61,    61,    61,
    61,    61,    61,   nil,    61,   nil,    61,   170,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   170,   170,   nil,   170,   170,
   170,   170,   170,   170,   170,   nil,   170,   nil,   170,   119,
   119,   nil,   119,   119,   119,   nil,   nil,   nil,   nil,   119,
   119,   119,   119,   119,   119 ]

racc_action_pointer = [
   199,   228,   nil,   nil,   221,   nil,    -5,   204,   nil,   198,
   182,   nil,   nil,   180,    -7,   136,   nil,    11,   -10,   292,
   nil,   nil,   nil,   nil,   320,   nil,   nil,   nil,   nil,   nil,
   135,   nil,   nil,   171,   nil,   157,   149,   144,   142,    97,
   nil,    99,   139,    91,   nil,   nil,   -42,   nil,   nil,    86,
   nil,    -3,   nil,   118,   104,   723,   102,   nil,   nil,   772,
   794,   821,   451,   nil,   125,    89,   241,   745,   647,   625,
   598,   114,   nil,     9,    45,   nil,   nil,    89,   nil,    85,
   nil,   nil,    61,   113,   262,    -4,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    48,   145,
     6,    17,    19,    23,   nil,   nil,   nil,    44,   nil,   nil,
    -1,   nil,   nil,   nil,    50,    80,   143,    54,   nil,   873,
    86,    69,   nil,   192,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    65,    85,    86,   nil,
    84,    85,    88,    80,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   399,    86,   113,     0,   117,   269,
    42,   696,   132,   674,   -16,   576,   549,   527,   500,   478,
   843,     3,   nil,   nil,   429,   nil,   213,   133,   137,   nil,
   nil,   nil,   nil,   137,   170,   nil,   nil,   nil,   nil,   150,
   371,   172,   343,   214,   155,   165,   nil,   nil,   nil,   155,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   383,     3,
   168,   175,   nil,   nil,    82,   196,   202,   nil,   nil,   nil,
   nil,    62,   213,   nil,    31,   nil,   nil,    13,   196,   202,
   nil,   nil,   235,   246,   nil,   nil,   217,   nil ]

racc_action_default = [
  -146,  -146,    -1,    -2,    -4,   -15,  -146,  -146,    -3,  -146,
   -17,   -18,   -19,   -21,   -24,  -140,   -99,  -102,  -105,  -146,
  -107,  -108,  -109,  -110,  -146,  -112,  -113,  -114,  -115,  -116,
  -146,  -118,  -119,  -146,  -121,  -146,  -146,  -146,  -146,  -127,
  -128,  -132,  -146,  -146,  -138,  -139,  -146,  -143,  -144,  -146,
   238,  -146,   -16,   -49,  -146,  -146,  -146,   -23,  -140,  -146,
  -146,  -146,  -146,  -106,  -146,  -146,  -146,  -146,  -146,  -146,
  -146,  -130,  -131,  -146,  -146,  -142,  -145,    -5,    -7,   -11,
    -9,   -10,   -51,  -146,   -26,   -29,   -30,   -32,   -33,   -72,
   -20,   -22,  -100,  -101,  -103,  -104,  -111,  -117,  -146,  -146,
  -146,  -146,  -146,  -146,  -129,  -133,  -135,  -146,  -137,  -141,
  -146,    -8,   -12,   -13,   -56,  -146,  -146,   -50,   -58,  -146,
  -146,   -75,   -77,  -146,   -80,   -81,   -82,   -84,   -85,   -86,
   -87,   -88,   -89,   -96,   -97,   -98,  -146,  -146,  -146,   -37,
   -39,   -41,   -42,  -146,   -28,  -120,  -122,  -123,  -124,  -125,
  -126,  -136,    -6,   -25,  -146,  -146,  -146,  -146,   -98,  -146,
  -146,  -146,  -146,  -146,  -146,  -146,  -146,  -146,  -146,  -146,
  -146,  -146,   -31,   -71,  -146,   -79,   -34,  -146,  -146,   -38,
   -40,   -43,   -27,   -57,   -52,   -54,   -55,   -14,   -83,   -76,
  -146,  -146,  -146,  -146,  -146,  -146,   -62,   -63,   -68,  -146,
   -70,   -90,   -91,   -92,   -93,   -94,   -95,   -78,   -35,  -146,
  -146,  -146,   -61,   -67,  -146,  -146,   -66,   -69,   -36,   -44,
   -45,  -146,  -146,   -53,  -146,   -60,   -64,  -146,   -46,  -146,
   -59,   -65,  -146,   -48,   -74,   -47,  -146,   -73 ]

racc_goto_table = [
    57,   117,    85,    14,    84,   172,   186,   194,    12,   198,
    78,   201,   202,   203,   204,   205,   206,   215,   185,   196,
   218,    64,    94,    95,    92,    93,   114,   153,    53,    52,
   173,    82,   219,   220,   157,    10,   211,    80,   213,   232,
   233,   184,    91,   111,     1,    77,     8,   172,   212,   231,
     4,    97,    14,   189,   207,   175,     3,    90,     2,   107,
   225,   186,    63,    99,   100,   101,   102,   103,   105,   152,
   230,   144,   183,   223,   106,   nil,   172,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    85,   nil,   176,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    80,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   158,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    85,    85,   208,   209,   182,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   228,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    64,   nil,   216,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   234,   nil,   nil,   nil,   nil,
   nil,   nil,   237,   nil,   216 ]

racc_goto_check = [
    10,    32,    23,    17,    22,    11,    37,    40,    15,    40,
     7,    40,    40,    40,    40,    40,    40,    43,    36,    42,
    29,    17,    55,    55,    54,    54,    20,    21,    18,    14,
    25,    19,    30,    31,    32,    13,    40,    10,    40,    33,
    34,    35,    10,     9,     1,     6,     5,    11,    42,    43,
     4,    10,    17,    47,    48,    49,     3,    15,     2,    57,
    40,    37,    58,    17,    17,    17,    17,    17,    70,     7,
    40,    10,    32,    36,    71,   nil,    11,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    23,   nil,    22,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    10,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    17,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    23,    23,    22,    22,    10,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    32,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    17,   nil,    17,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    10,   nil,   nil,   nil,   nil,
   nil,   nil,    10,   nil,    17 ]

racc_goto_pointer = [
   nil,    44,    58,    56,    50,    42,    -6,   -41,   nil,   -36,
   -14,  -115,   nil,    29,    19,     2,   nil,    -3,    18,   -22,
   -56,   -87,   -50,   -52,   nil,   -90,   nil,   nil,   nil,  -189,
  -177,  -176,   -82,  -190,  -189,  -114,  -137,  -149,   nil,   nil,
  -154,   nil,  -143,  -178,   nil,   nil,   nil,  -106,  -120,   -68,
   nil,   nil,   nil,   nil,   -35,   -39,   nil,   -14,    43,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    -5,     1,   nil,   nil ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   156,   nil,   nil,   nil,    79,   nil,
    31,   118,     5,   nil,   nil,   nil,    13,   135,   nil,   nil,
   nil,   nil,   nil,    32,    86,   197,    87,    88,   138,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    22,   134,   128,
   119,   129,   nil,   nil,   130,   131,   132,   121,   122,   124,
   125,   126,   127,   133,    16,    17,    18,    19,    20,    21,
    23,    25,    26,    27,    28,    30,    34,    39,    40,    43,
   nil,   nil,    47,    48 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 58, :_reduce_none,
  1, 59, :_reduce_none,
  2, 60, :_reduce_3,
  0, 62, :_reduce_none,
  3, 62, :_reduce_5,
  3, 63, :_reduce_6,
  1, 63, :_reduce_none,
  2, 64, :_reduce_8,
  1, 65, :_reduce_none,
  1, 65, :_reduce_10,
  0, 66, :_reduce_11,
  1, 66, :_reduce_12,
  1, 66, :_reduce_13,
  3, 68, :_reduce_14,
  1, 61, :_reduce_none,
  3, 69, :_reduce_16,
  2, 69, :_reduce_17,
  1, 70, :_reduce_18,
  1, 70, :_reduce_19,
  3, 72, :_reduce_20,
  1, 72, :_reduce_none,
  3, 73, :_reduce_22,
  2, 73, :_reduce_23,
  1, 73, :_reduce_none,
  4, 71, :_reduce_25,
  2, 75, :_reduce_26,
  3, 79, :_reduce_27,
  2, 79, :_reduce_28,
  1, 79, :_reduce_none,
  1, 79, :_reduce_none,
  1, 82, :_reduce_none,
  1, 81, :_reduce_none,
  1, 81, :_reduce_none,
  3, 83, :_reduce_34,
  4, 83, :_reduce_35,
  5, 84, :_reduce_36,
  1, 85, :_reduce_37,
  2, 85, :_reduce_38,
  1, 85, :_reduce_39,
  2, 85, :_reduce_40,
  1, 85, :_reduce_41,
  1, 85, :_reduce_42,
  2, 85, :_reduce_43,
  1, 86, :_reduce_none,
  1, 86, :_reduce_none,
  2, 87, :_reduce_46,
  4, 88, :_reduce_47,
  1, 90, :_reduce_none,
  0, 76, :_reduce_none,
  2, 76, :_reduce_50,
  0, 77, :_reduce_none,
  3, 77, :_reduce_52,
  3, 92, :_reduce_53,
  1, 92, :_reduce_none,
  1, 93, :_reduce_none,
  0, 78, :_reduce_none,
  2, 78, :_reduce_57,
  1, 95, :_reduce_none,
  6, 96, :_reduce_59,
  5, 96, :_reduce_60,
  4, 98, :_reduce_61,
  3, 98, :_reduce_62,
  1, 99, :_reduce_none,
  3, 99, :_reduce_64,
  3, 100, :_reduce_65,
  1, 100, :_reduce_none,
  4, 101, :_reduce_67,
  3, 101, :_reduce_68,
  4, 102, :_reduce_69,
  3, 102, :_reduce_70,
  2, 103, :_reduce_71,
  1, 80, :_reduce_72,
  3, 91, :_reduce_73,
  1, 91, :_reduce_none,
  1, 89, :_reduce_none,
  3, 89, :_reduce_76,
  1, 104, :_reduce_none,
  3, 104, :_reduce_78,
  2, 105, :_reduce_79,
  1, 105, :_reduce_none,
  1, 106, :_reduce_none,
  1, 107, :_reduce_none,
  3, 107, :_reduce_83,
  1, 108, :_reduce_none,
  1, 108, :_reduce_none,
  1, 108, :_reduce_none,
  1, 108, :_reduce_none,
  1, 108, :_reduce_none,
  1, 108, :_reduce_none,
  3, 109, :_reduce_90,
  3, 109, :_reduce_91,
  3, 109, :_reduce_92,
  3, 109, :_reduce_93,
  3, 109, :_reduce_94,
  3, 109, :_reduce_95,
  1, 97, :_reduce_none,
  1, 97, :_reduce_none,
  1, 110, :_reduce_none,
  1, 74, :_reduce_none,
  3, 111, :_reduce_100,
  3, 111, :_reduce_101,
  1, 111, :_reduce_none,
  3, 112, :_reduce_103,
  3, 112, :_reduce_104,
  1, 112, :_reduce_none,
  2, 113, :_reduce_106,
  1, 113, :_reduce_none,
  1, 115, :_reduce_none,
  1, 115, :_reduce_none,
  1, 115, :_reduce_none,
  3, 115, :_reduce_111,
  1, 116, :_reduce_none,
  1, 116, :_reduce_none,
  1, 118, :_reduce_none,
  1, 118, :_reduce_none,
  1, 119, :_reduce_116,
  3, 94, :_reduce_117,
  1, 94, :_reduce_none,
  1, 122, :_reduce_none,
  4, 117, :_reduce_120,
  1, 117, :_reduce_none,
  4, 123, :_reduce_122,
  4, 123, :_reduce_123,
  4, 123, :_reduce_124,
  4, 123, :_reduce_125,
  4, 123, :_reduce_126,
  1, 120, :_reduce_none,
  1, 120, :_reduce_none,
  3, 124, :_reduce_129,
  2, 124, :_reduce_130,
  2, 124, :_reduce_131,
  1, 124, :_reduce_132,
  3, 125, :_reduce_133,
  1, 126, :_reduce_none,
  1, 127, :_reduce_none,
  2, 128, :_reduce_136,
  1, 128, :_reduce_137,
  1, 114, :_reduce_138,
  1, 114, :_reduce_139,
  1, 67, :_reduce_140,
  3, 121, :_reduce_141,
  2, 121, :_reduce_142,
  1, 121, :_reduce_none,
  1, 129, :_reduce_none,
  2, 130, :_reduce_145 ]

racc_reduce_n = 146

racc_shift_n = 238

racc_token_table = {
  false => 0,
  :error => 1,
  :ORDER => 2,
  :BY => 3,
  :comma => 4,
  :unsigned_integer => 5,
  :ASC => 6,
  :DESC => 7,
  :left_paren => 8,
  :right_paren => 9,
  :SELECT => 10,
  :asterisk => 11,
  :AS => 12,
  :FROM => 13,
  :CROSS => 14,
  :JOIN => 15,
  :INNER => 16,
  :LEFT => 17,
  :OUTER => 18,
  :RIGHT => 19,
  :FULL => 20,
  :ON => 21,
  :USING => 22,
  :WHERE => 23,
  :GROUP => 24,
  :HAVING => 25,
  :NOT => 26,
  :BETWEEN => 27,
  :AND => 28,
  :IN => 29,
  :LIKE => 30,
  :IS => 31,
  :NULL => 32,
  :EXISTS => 33,
  :identifier => 34,
  :OR => 35,
  :equals_operator => 36,
  :not_equals_operator => 37,
  :less_than_operator => 38,
  :greater_than_operator => 39,
  :less_than_or_equals_operator => 40,
  :greater_than_or_equals_operator => 41,
  :plus_sign => 42,
  :minus_sign => 43,
  :solidus => 44,
  :CURRENT_USER => 45,
  :period => 46,
  :COUNT => 47,
  :AVG => 48,
  :MAX => 49,
  :MIN => 50,
  :SUM => 51,
  :E => 52,
  :quote => 53,
  :character_string_literal => 54,
  :DATE => 55,
  :date_string => 56 }

racc_nt_base = 57

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "ORDER",
  "BY",
  "comma",
  "unsigned_integer",
  "ASC",
  "DESC",
  "left_paren",
  "right_paren",
  "SELECT",
  "asterisk",
  "AS",
  "FROM",
  "CROSS",
  "JOIN",
  "INNER",
  "LEFT",
  "OUTER",
  "RIGHT",
  "FULL",
  "ON",
  "USING",
  "WHERE",
  "GROUP",
  "HAVING",
  "NOT",
  "BETWEEN",
  "AND",
  "IN",
  "LIKE",
  "IS",
  "NULL",
  "EXISTS",
  "identifier",
  "OR",
  "equals_operator",
  "not_equals_operator",
  "less_than_operator",
  "greater_than_operator",
  "less_than_or_equals_operator",
  "greater_than_or_equals_operator",
  "plus_sign",
  "minus_sign",
  "solidus",
  "CURRENT_USER",
  "period",
  "COUNT",
  "AVG",
  "MAX",
  "MIN",
  "SUM",
  "E",
  "quote",
  "character_string_literal",
  "DATE",
  "date_string",
  "$start",
  "direct_sql_statement",
  "direct_sql_data_statement",
  "direct_select_statement_multiple_rows",
  "query_expression",
  "order_by_clause",
  "sort_specification_list",
  "sort_specification",
  "sort_key",
  "ordering_specification",
  "column_name",
  "subquery",
  "query_specification",
  "select_list",
  "table_expression",
  "select_sublist",
  "derived_column",
  "value_expression",
  "from_clause",
  "where_clause",
  "group_by_clause",
  "having_clause",
  "table_reference",
  "table_name",
  "joined_table",
  "table_subquery",
  "cross_join",
  "qualified_join",
  "join_type",
  "join_specification",
  "join_condition",
  "named_columns_join",
  "search_condition",
  "join_column_list",
  "column_name_list",
  "grouping_column_reference_list",
  "grouping_column_reference",
  "column_reference",
  "row_subquery",
  "between_predicate",
  "row_value_constructor",
  "in_predicate",
  "in_predicate_value",
  "in_value_list",
  "like_predicate",
  "null_predicate",
  "exists_predicate",
  "boolean_term",
  "boolean_factor",
  "boolean_test",
  "boolean_primary",
  "predicate",
  "comparison_predicate",
  "row_value_constructor_element",
  "numeric_value_expression",
  "term",
  "factor",
  "sign",
  "value_expression_primary",
  "unsigned_value_specification",
  "set_function_specification",
  "unsigned_literal",
  "general_value_specification",
  "unsigned_numeric_literal",
  "general_literal",
  "qualifier",
  "general_set_function",
  "exact_numeric_literal",
  "approximate_numeric_literal",
  "mantissa",
  "exponent",
  "signed_integer",
  "datetime_literal",
  "date_literal" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

# reduce 2 omitted

module_eval(<<'.,.,', 'parser.racc', 11)
  def _reduce_3(val, _values, result)
     result = SQL::Statement::DirectSelect.new(val[0], val[1]) 
    result
  end
.,.,

# reduce 4 omitted

module_eval(<<'.,.,', 'parser.racc', 16)
  def _reduce_5(val, _values, result)
     result = SQL::Statement::OrderBy.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 19)
  def _reduce_6(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 7 omitted

module_eval(<<'.,.,', 'parser.racc', 23)
  def _reduce_8(val, _values, result)
     result = val[1].new(val[0]) 
    result
  end
.,.,

# reduce 9 omitted

module_eval(<<'.,.,', 'parser.racc', 27)
  def _reduce_10(val, _values, result)
     result = SQL::Statement::Integer.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 30)
  def _reduce_11(val, _values, result)
     result = SQL::Statement::Ascending 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 31)
  def _reduce_12(val, _values, result)
     result = SQL::Statement::Ascending 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 32)
  def _reduce_13(val, _values, result)
     result = SQL::Statement::Descending 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 37)
  def _reduce_14(val, _values, result)
     result = SQL::Statement::Subquery.new(val[1]) 
    result
  end
.,.,

# reduce 15 omitted

module_eval(<<'.,.,', 'parser.racc', 43)
  def _reduce_16(val, _values, result)
     result = SQL::Statement::Select.new(val[1], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 44)
  def _reduce_17(val, _values, result)
     result = SQL::Statement::Select.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 47)
  def _reduce_18(val, _values, result)
     result = SQL::Statement::All.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 48)
  def _reduce_19(val, _values, result)
     result = SQL::Statement::SelectList.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 51)
  def _reduce_20(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 21 omitted

module_eval(<<'.,.,', 'parser.racc', 55)
  def _reduce_22(val, _values, result)
     result = SQL::Statement::As.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 56)
  def _reduce_23(val, _values, result)
     result = SQL::Statement::As.new(val[0], val[1]) 
    result
  end
.,.,

# reduce 24 omitted

module_eval(<<'.,.,', 'parser.racc', 60)
  def _reduce_25(val, _values, result)
     result = SQL::Statement::TableExpression.new(val[0], val[1], val[2], val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 63)
  def _reduce_26(val, _values, result)
     result = SQL::Statement::FromClause.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 66)
  def _reduce_27(val, _values, result)
     result = SQL::Statement::As.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 67)
  def _reduce_28(val, _values, result)
     result = SQL::Statement::As.new(val[0], val[1]) 
    result
  end
.,.,

# reduce 29 omitted

# reduce 30 omitted

# reduce 31 omitted

# reduce 32 omitted

# reduce 33 omitted

module_eval(<<'.,.,', 'parser.racc', 79)
  def _reduce_34(val, _values, result)
     result = SQL::Statement::CrossJoin.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 80)
  def _reduce_35(val, _values, result)
     result = SQL::Statement::CrossJoin.new(val[0], val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 83)
  def _reduce_36(val, _values, result)
     result = val[1].new(val[0], val[3], val[4]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 86)
  def _reduce_37(val, _values, result)
     result = SQL::Statement::InnerJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 87)
  def _reduce_38(val, _values, result)
     result = SQL::Statement::LeftOuterJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 88)
  def _reduce_39(val, _values, result)
     result = SQL::Statement::LeftJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 89)
  def _reduce_40(val, _values, result)
     result = SQL::Statement::RightOuterJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 90)
  def _reduce_41(val, _values, result)
     result = SQL::Statement::RightJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 91)
  def _reduce_42(val, _values, result)
     result = SQL::Statement::FullJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 92)
  def _reduce_43(val, _values, result)
     result = SQL::Statement::FullOuterJoin 
    result
  end
.,.,

# reduce 44 omitted

# reduce 45 omitted

module_eval(<<'.,.,', 'parser.racc', 99)
  def _reduce_46(val, _values, result)
     result = SQL::Statement::On.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 102)
  def _reduce_47(val, _values, result)
     result = SQL::Statement::Using.new(val[2]) 
    result
  end
.,.,

# reduce 48 omitted

# reduce 49 omitted

module_eval(<<'.,.,', 'parser.racc', 109)
  def _reduce_50(val, _values, result)
     result = SQL::Statement::WhereClause.new(val[1]) 
    result
  end
.,.,

# reduce 51 omitted

module_eval(<<'.,.,', 'parser.racc', 113)
  def _reduce_52(val, _values, result)
     result = SQL::Statement::GroupByClause.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 116)
  def _reduce_53(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 54 omitted

# reduce 55 omitted

# reduce 56 omitted

module_eval(<<'.,.,', 'parser.racc', 124)
  def _reduce_57(val, _values, result)
     result = SQL::Statement::HavingClause.new(val[1]) 
    result
  end
.,.,

# reduce 58 omitted

module_eval(<<'.,.,', 'parser.racc', 131)
  def _reduce_59(val, _values, result)
     result = SQL::Statement::Not.new(SQL::Statement::Between.new(val[0], val[3], val[5])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 132)
  def _reduce_60(val, _values, result)
     result = SQL::Statement::Between.new(val[0], val[2], val[4]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 135)
  def _reduce_61(val, _values, result)
     result = SQL::Statement::Not.new(SQL::Statement::In.new(val[0], val[3])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 136)
  def _reduce_62(val, _values, result)
     result = SQL::Statement::In.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 63 omitted

module_eval(<<'.,.,', 'parser.racc', 140)
  def _reduce_64(val, _values, result)
     result = SQL::Statement::InValueList.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 143)
  def _reduce_65(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 66 omitted

module_eval(<<'.,.,', 'parser.racc', 150)
  def _reduce_67(val, _values, result)
     result = SQL::Statement::Not.new(SQL::Statement::Like.new(val[0], val[3])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 151)
  def _reduce_68(val, _values, result)
     result = SQL::Statement::Like.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 154)
  def _reduce_69(val, _values, result)
     result = SQL::Statement::Not.new(SQL::Statement::Is.new(val[0], SQL::Statement::Null.new)) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 155)
  def _reduce_70(val, _values, result)
     result = SQL::Statement::Is.new(val[0], SQL::Statement::Null.new) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 158)
  def _reduce_71(val, _values, result)
     result = SQL::Statement::Exists.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 162)
  def _reduce_72(val, _values, result)
     result = SQL::Statement::Table.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 165)
  def _reduce_73(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 74 omitted

# reduce 75 omitted

module_eval(<<'.,.,', 'parser.racc', 171)
  def _reduce_76(val, _values, result)
     result = SQL::Statement::Or.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 77 omitted

module_eval(<<'.,.,', 'parser.racc', 175)
  def _reduce_78(val, _values, result)
     result = SQL::Statement::And.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 178)
  def _reduce_79(val, _values, result)
     result = SQL::Statement::Not.new(val[1]) 
    result
  end
.,.,

# reduce 80 omitted

# reduce 81 omitted

# reduce 82 omitted

module_eval(<<'.,.,', 'parser.racc', 186)
  def _reduce_83(val, _values, result)
     result = val[1] 
    result
  end
.,.,

# reduce 84 omitted

# reduce 85 omitted

# reduce 86 omitted

# reduce 87 omitted

# reduce 88 omitted

# reduce 89 omitted

module_eval(<<'.,.,', 'parser.racc', 197)
  def _reduce_90(val, _values, result)
     result = SQL::Statement::Equals.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 198)
  def _reduce_91(val, _values, result)
     result = SQL::Statement::Not.new(SQL::Statement::Equals.new(val[0], val[2])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 199)
  def _reduce_92(val, _values, result)
     result = SQL::Statement::Less.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 200)
  def _reduce_93(val, _values, result)
     result = SQL::Statement::Greater.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 201)
  def _reduce_94(val, _values, result)
     result = SQL::Statement::LessOrEquals.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 202)
  def _reduce_95(val, _values, result)
     result = SQL::Statement::GreaterOrEquals.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 96 omitted

# reduce 97 omitted

# reduce 98 omitted

# reduce 99 omitted

module_eval(<<'.,.,', 'parser.racc', 215)
  def _reduce_100(val, _values, result)
     result = SQL::Statement::Add.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 216)
  def _reduce_101(val, _values, result)
     result = SQL::Statement::Subtract.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 102 omitted

module_eval(<<'.,.,', 'parser.racc', 220)
  def _reduce_103(val, _values, result)
     result = SQL::Statement::Multiply.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 221)
  def _reduce_104(val, _values, result)
     result = SQL::Statement::Divide.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 105 omitted

module_eval(<<'.,.,', 'parser.racc', 225)
  def _reduce_106(val, _values, result)
     result = val[0].new(val[1]) 
    result
  end
.,.,

# reduce 107 omitted

# reduce 108 omitted

# reduce 109 omitted

# reduce 110 omitted

module_eval(<<'.,.,', 'parser.racc', 232)
  def _reduce_111(val, _values, result)
     result = val[1] 
    result
  end
.,.,

# reduce 112 omitted

# reduce 113 omitted

# reduce 114 omitted

# reduce 115 omitted

module_eval(<<'.,.,', 'parser.racc', 243)
  def _reduce_116(val, _values, result)
     result = SQL::Statement::CurrentUser.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 246)
  def _reduce_117(val, _values, result)
     result = SQL::Statement::QualifiedColumn.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 118 omitted

# reduce 119 omitted

module_eval(<<'.,.,', 'parser.racc', 253)
  def _reduce_120(val, _values, result)
     result = SQL::Statement::Count.new(SQL::Statement::All.new) 
    result
  end
.,.,

# reduce 121 omitted

module_eval(<<'.,.,', 'parser.racc', 257)
  def _reduce_122(val, _values, result)
     result = SQL::Statement::Count.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 258)
  def _reduce_123(val, _values, result)
     result = SQL::Statement::Average.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 259)
  def _reduce_124(val, _values, result)
     result = SQL::Statement::Maximum.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 260)
  def _reduce_125(val, _values, result)
     result = SQL::Statement::Minimum.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 261)
  def _reduce_126(val, _values, result)
     result = SQL::Statement::Sum.new(val[2]) 
    result
  end
.,.,

# reduce 127 omitted

# reduce 128 omitted

module_eval(<<'.,.,', 'parser.racc', 269)
  def _reduce_129(val, _values, result)
     result = SQL::Statement::Float.new("#{val[0]}.#{val[2]}".to_f) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 270)
  def _reduce_130(val, _values, result)
     result = SQL::Statement::Float.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 271)
  def _reduce_131(val, _values, result)
     result = SQL::Statement::Float.new("0.#{val[1]}".to_f) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 272)
  def _reduce_132(val, _values, result)
     result = SQL::Statement::Integer.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 275)
  def _reduce_133(val, _values, result)
     result = SQL::Statement::ApproximateFloat.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 134 omitted

# reduce 135 omitted

module_eval(<<'.,.,', 'parser.racc', 284)
  def _reduce_136(val, _values, result)
     result = val[0].new(SQL::Statement::Integer.new(val[1])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 285)
  def _reduce_137(val, _values, result)
     result = SQL::Statement::Integer.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 288)
  def _reduce_138(val, _values, result)
     result = SQL::Statement::UnaryPlus 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 289)
  def _reduce_139(val, _values, result)
     result = SQL::Statement::UnaryMinus 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 293)
  def _reduce_140(val, _values, result)
     result = SQL::Statement::Column.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 297)
  def _reduce_141(val, _values, result)
     result = SQL::Statement::String.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 298)
  def _reduce_142(val, _values, result)
     result = SQL::Statement::String.new('') 
    result
  end
.,.,

# reduce 143 omitted

# reduce 144 omitted

module_eval(<<'.,.,', 'parser.racc', 305)
  def _reduce_145(val, _values, result)
     result = SQL::Statement::Date.new(val[1]) 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module SQL
